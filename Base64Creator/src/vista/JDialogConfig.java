/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import logica.Constantes;
import logica.Conversor;
import org.json.simple.JSONObject;
import org.json.simple.parser.ParseException;
import persistencia.Persistencia;

/**
 *
 * @author NS
 */
public class JDialogConfig extends javax.swing.JDialog implements Constantes {

    /**
     * Creates new form JDialogConfig
     */
    private File fileselect;
    private Conversor gestorBase64;

    public JDialogConfig(java.awt.Frame parent, boolean modal, Conversor direccion) {
        super(parent, modal);
        initComponents();
        setTitle("Configuración");
        setLocationRelativeTo(parent);
        gestorBase64 = direccion;
        this.jTextFieldRuta.setText(gestorBase64.getDireccionRecibido().getAbsolutePath());

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldRuta = new javax.swing.JTextField();
        jPanel2 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuración para la ruta de exportación"));

        jLabel1.setText("Ruta :");

        jTextFieldRuta.setToolTipText("Es la ruta donde se guardan los archivos decodificados");

        jPanel2.setLayout(new java.awt.GridLayout(1, 0));

        jButton2.setText("Guardar");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton2);

        jButton1.setText("Cambiar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel2.add(jButton1);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldRuta, javax.swing.GroupLayout.Alignment.TRAILING))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldRuta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(27, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 11, 389, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        JFileChooser selector = new JFileChooser();
        selector.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        // selector.setFileFilter( new FileNameExtensionFilter("json","json"));
        // selector.setDialogType(JFileChooser.DIRECTORIES_ONLY);

        int showDialog = selector.showDialog(this, "Seleccionar");
        if (showDialog == JFileChooser.APPROVE_OPTION) {

            fileselect = selector.getSelectedFile();
            jTextFieldRuta.setText(selector.getSelectedFile().getAbsolutePath());

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if (fileselect != null) {
            try {
                JSONObject archivo = new JSONObject();

                archivo.put("config", fileselect.getAbsolutePath());

                boolean sta = Persistencia.guardarJSON(archivo, archivoConfig, "");
                if (sta) {
                    cargarConfiguracion();
                    JOptionPane.showMessageDialog(this, "Configuración guardada");

                    this.setVisible(false);
                } else {
                    JOptionPane.showMessageDialog(this, "Error al guardar la configuración ");
                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Upss, Error al escribir la configuración");
            }

        }
    }//GEN-LAST:event_jButton2ActionPerformed

    public void cargarConfiguracion() {
        try {
            JSONObject cargarJSONconf = Persistencia.cargarJSONconf();
            String ruta = (String) cargarJSONconf.get("config");

            gestorBase64.setDireccionRecibido(new File(ruta));

        } catch (ParseException | IOException ex) {
            gestorBase64 = new Conversor("");

            JOptionPane.showMessageDialog(this, "Error al cargar configuración inicial");
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JTextField jTextFieldRuta;
    // End of variables declaration//GEN-END:variables
}
