/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vista;

import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import logica.Constantes;
import logica.Conversor;
import org.json.simple.JSONObject;
import persistencia.Persistencia;

/**
 * @author NS
 */
public class JPanelCodificar extends javax.swing.JPanel implements Constantes {

    private Conversor gestorBase64;
    private File fileSelect;
    private String cadena = "";

    Thread verBase64;

    public JPanelCodificar(Conversor object) {

        initComponents();
        setSize(new java.awt.Dimension(530, 310));
        gestorBase64 = object;
        //jButtonCancelarActionPerformed(null);
        jButtonCancelar.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextAreaCodificar = new javax.swing.JTextArea();
        jLabelArchivoActual = new javax.swing.JLabel();
        jButtonCodificar = new javax.swing.JButton();
        jButtonSeleccionarArchivo = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jButtonCancelar = new javax.swing.JButton();

        setPreferredSize(new java.awt.Dimension(530, 310));

        jTextAreaCodificar.setColumns(20);
        jTextAreaCodificar.setRows(5);
        jTextAreaCodificar.setText("\n");
        jTextAreaCodificar.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                jTextAreaCodificarKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(jTextAreaCodificar);

        jButtonCodificar.setText("Codificar y Exportar");
        jButtonCodificar.setEnabled(false);
        jButtonCodificar.setPreferredSize(new java.awt.Dimension(125, 23));
        jButtonCodificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCodificarActionPerformed(evt);
            }
        });

        jButtonSeleccionarArchivo.setText("Seleccionar archivo");
        jButtonSeleccionarArchivo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSeleccionarArchivoActionPerformed(evt);
            }
        });

        jLabel1.setText("Archivo :");

        jButtonCancelar.setText("X");
        jButtonCancelar.setToolTipText("Cancelar");
        jButtonCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 409, Short.MAX_VALUE)
                .addComponent(jButtonCancelar)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(30, 30, 30)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 336, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButtonSeleccionarArchivo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonCodificar, javax.swing.GroupLayout.DEFAULT_SIZE, 129, Short.MAX_VALUE))
                    .addGap(31, 31, 31))
                .addGroup(layout.createSequentialGroup()
                    .addGap(82, 82, 82)
                    .addComponent(jLabelArchivoActual, javax.swing.GroupLayout.PREFERRED_SIZE, 362, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButtonCancelar))
                .addContainerGap(272, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jLabelArchivoActual, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jButtonSeleccionarArchivo, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jButtonCodificar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSeleccionarArchivoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSeleccionarArchivoActionPerformed
        // TODO add your handling code here:
        JFileChooser selector = new JFileChooser();
        selector.setFileSelectionMode(JFileChooser.FILES_ONLY);
        // selector.setFileFilter( new FileNameExtensionFilter("json","json"));
        //      selector.setDialogType(JFileChooser.DIRECTORIES_ONLY);

        int showDialog = selector.showDialog(this, "Seleccionar");
        if (showDialog == JFileChooser.APPROVE_OPTION) {

            jTextAreaCodificar.setText("");
            jLabelArchivoActual.setText(selector.getSelectedFile().getAbsolutePath());
            fileSelect = selector.getSelectedFile();
            path(fileSelect.getAbsolutePath());
            bloquerBotones();
            jButtonSeleccionarArchivo.setEnabled(false);

        }


    }//GEN-LAST:event_jButtonSeleccionarArchivoActionPerformed

    private String path(String nombre) {

        String aux = "";

        System.out.println("Nombre : " + nombre);
        for (int i = nombre.length() - 1; i > 0; i--) {
            if ((nombre.charAt(i)) == '.') {
                System.out.println("Extensión :" + nombre.substring(i + 1, nombre.length()));
                aux = nombre.substring(0, i);

            }
        }

        return aux;

        // 
    }


    private void jTextAreaCodificarKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextAreaCodificarKeyTyped
        // TODO add your handling code here:
        char c = evt.getKeyChar();//solo numeros

        evt.consume();

    }//GEN-LAST:event_jTextAreaCodificarKeyTyped

    private void jButtonCodificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCodificarActionPerformed
        // TODO add your handling code here:
        JFileChooser selector = new JFileChooser();
        selector.setDialogType(JFileChooser.SAVE_DIALOG);
        selector.setFileFilter(new FileNameExtensionFilter("json", "json"));

        int showDialog = selector.showDialog(this, "Exportar JSON");
        if (showDialog == JFileChooser.APPROVE_OPTION) {

            try {
            
                System.out.println(gestorBase64==null?"ES NULO": "ESTA BIEN ESTA VANIA ");
           
                
                String codificarBase64 = gestorBase64.codificarBase64(fileSelect.getAbsoluteFile());
                cadena = codificarBase64; // Esta cadena está en el método convertirVariasFilas
                // Y es procesada por el Hilo

                JSONObject archivo = new JSONObject();
                archivo.put("archivo", (fileSelect.getName()));
                archivo.put("contenido", codificarBase64);

                boolean guardarJSON = Persistencia.guardarJSON(archivo, ArchivoContenido, selector.getSelectedFile().getAbsolutePath());
                if (guardarJSON) {

                    JOptionPane.showMessageDialog(this, "Archivo exportado en JSON");

                    // Reservo un nuevo hilo para imprimir en pantalla
                    verBase64 = verBase64();
                    // Eso es para no caer en un IlegalArgument o usar resumen
                    verBase64.start();

                } else {
                    JOptionPane.showMessageDialog(this, "No se pudo exportar el contenido");
                }
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(this, "Error al guardar el archivo :\n" + ex.getMessage());
            }

        }
    }//GEN-LAST:event_jButtonCodificarActionPerformed

    private void jButtonCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonCancelarActionPerformed
        // TODO add your handling code here:
        jLabelArchivoActual.setText("");
        fileSelect = null;
        jButtonCodificar.setEnabled(false);
        jButtonSeleccionarArchivo.setEnabled(true);
        jButtonCancelar.setVisible(false);
        jTextAreaCodificar.setText("");


    }//GEN-LAST:event_jButtonCancelarActionPerformed
    public void bloquerBotones() {
        if (jButtonCodificar.isEnabled()) {
            jButtonCancelar.setVisible(false);
            jButtonCodificar.setEnabled(false);

        } else {
            jButtonCancelar.setVisible(true);
            jButtonCodificar.setEnabled(true);

        }
    }

    public Thread verBase64() {

        return new Thread() {
            @Override
            public void run() {

                convertirVariasLineas();

            }

        };

    }

    private boolean convertirVariasLineas() {

        jTextAreaCodificar.setText("");
        System.out.println("Tamaño de la cadena " + cadena.length());

        for (int i = 0; i < cadena.length(); i++) {
            if (i > 5000) {
                jTextAreaCodificar.setText(jTextAreaCodificar.getText() + "\n"
                        + " El contenido no es posible mostrarlo por completo\n"
                        + "para visualizarlo Diríjase al archivo JSON");
                return true;
            }

            if (i % 40 == 0) {
                jTextAreaCodificar.setText(jTextAreaCodificar.getText() + "\n");
            }
            jTextAreaCodificar.setText(jTextAreaCodificar.getText() + String.valueOf(cadena.charAt(i)));

        }
        return true;

    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonCancelar;
    private javax.swing.JButton jButtonCodificar;
    private javax.swing.JButton jButtonSeleccionarArchivo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabelArchivoActual;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextAreaCodificar;
    // End of variables declaration//GEN-END:variables
}
